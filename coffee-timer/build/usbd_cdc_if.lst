ARM GAS  /var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usbd_cdc_if.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CDC_DeInit_FS,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	CDC_DeInit_FS:
  25              	.LFB134:
  26              		.file 1 "Src/usbd_cdc_if.c"
   1:Src/usbd_cdc_if.c **** /* USER CODE BEGIN Header */
   2:Src/usbd_cdc_if.c **** /**
   3:Src/usbd_cdc_if.c ****   ******************************************************************************
   4:Src/usbd_cdc_if.c ****   * @file           : usbd_cdc_if.c
   5:Src/usbd_cdc_if.c ****   * @version        : v3.0_Cube
   6:Src/usbd_cdc_if.c ****   * @brief          : Usb device for Virtual Com Port.
   7:Src/usbd_cdc_if.c ****   ******************************************************************************
   8:Src/usbd_cdc_if.c ****   * @attention
   9:Src/usbd_cdc_if.c ****   *
  10:Src/usbd_cdc_if.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  11:Src/usbd_cdc_if.c ****   * All rights reserved.</center></h2>
  12:Src/usbd_cdc_if.c ****   *
  13:Src/usbd_cdc_if.c ****   * This software component is licensed by ST under Ultimate Liberty license
  14:Src/usbd_cdc_if.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:Src/usbd_cdc_if.c ****   * the License. You may obtain a copy of the License at:
  16:Src/usbd_cdc_if.c ****   *                             www.st.com/SLA0044
  17:Src/usbd_cdc_if.c ****   *
  18:Src/usbd_cdc_if.c ****   ******************************************************************************
  19:Src/usbd_cdc_if.c ****   */
  20:Src/usbd_cdc_if.c **** /* USER CODE END Header */
  21:Src/usbd_cdc_if.c **** 
  22:Src/usbd_cdc_if.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/usbd_cdc_if.c **** #include "usbd_cdc_if.h"
  24:Src/usbd_cdc_if.c **** 
  25:Src/usbd_cdc_if.c **** /* USER CODE BEGIN INCLUDE */
  26:Src/usbd_cdc_if.c **** 
  27:Src/usbd_cdc_if.c **** /* USER CODE END INCLUDE */
  28:Src/usbd_cdc_if.c **** 
  29:Src/usbd_cdc_if.c **** /* Private typedef -----------------------------------------------------------*/
  30:Src/usbd_cdc_if.c **** /* Private define ------------------------------------------------------------*/
  31:Src/usbd_cdc_if.c **** /* Private macro -------------------------------------------------------------*/
  32:Src/usbd_cdc_if.c **** 
ARM GAS  /var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s 			page 2


  33:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PV */
  34:Src/usbd_cdc_if.c **** /* Private variables ---------------------------------------------------------*/
  35:Src/usbd_cdc_if.c **** 
  36:Src/usbd_cdc_if.c **** /* USER CODE END PV */
  37:Src/usbd_cdc_if.c **** 
  38:Src/usbd_cdc_if.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  39:Src/usbd_cdc_if.c ****   * @brief Usb device library.
  40:Src/usbd_cdc_if.c ****   * @{
  41:Src/usbd_cdc_if.c ****   */
  42:Src/usbd_cdc_if.c **** 
  43:Src/usbd_cdc_if.c **** /** @addtogroup USBD_CDC_IF
  44:Src/usbd_cdc_if.c ****   * @{
  45:Src/usbd_cdc_if.c ****   */
  46:Src/usbd_cdc_if.c **** 
  47:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_TypesDefinitions USBD_CDC_IF_Private_TypesDefinitions
  48:Src/usbd_cdc_if.c ****   * @brief Private types.
  49:Src/usbd_cdc_if.c ****   * @{
  50:Src/usbd_cdc_if.c ****   */
  51:Src/usbd_cdc_if.c **** 
  52:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_TYPES */
  53:Src/usbd_cdc_if.c **** 
  54:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_TYPES */
  55:Src/usbd_cdc_if.c **** 
  56:Src/usbd_cdc_if.c **** /**
  57:Src/usbd_cdc_if.c ****   * @}
  58:Src/usbd_cdc_if.c ****   */
  59:Src/usbd_cdc_if.c **** 
  60:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_Defines USBD_CDC_IF_Private_Defines
  61:Src/usbd_cdc_if.c ****   * @brief Private defines.
  62:Src/usbd_cdc_if.c ****   * @{
  63:Src/usbd_cdc_if.c ****   */
  64:Src/usbd_cdc_if.c **** 
  65:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_DEFINES */
  66:Src/usbd_cdc_if.c **** /* Define size for the receive and transmit buffer over CDC */
  67:Src/usbd_cdc_if.c **** /* It's up to user to redefine and/or remove those define */
  68:Src/usbd_cdc_if.c **** #define APP_RX_DATA_SIZE  1000
  69:Src/usbd_cdc_if.c **** #define APP_TX_DATA_SIZE  1000
  70:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_DEFINES */
  71:Src/usbd_cdc_if.c **** 
  72:Src/usbd_cdc_if.c **** /**
  73:Src/usbd_cdc_if.c ****   * @}
  74:Src/usbd_cdc_if.c ****   */
  75:Src/usbd_cdc_if.c **** 
  76:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_Macros USBD_CDC_IF_Private_Macros
  77:Src/usbd_cdc_if.c ****   * @brief Private macros.
  78:Src/usbd_cdc_if.c ****   * @{
  79:Src/usbd_cdc_if.c ****   */
  80:Src/usbd_cdc_if.c **** 
  81:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_MACRO */
  82:Src/usbd_cdc_if.c **** 
  83:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_MACRO */
  84:Src/usbd_cdc_if.c **** 
  85:Src/usbd_cdc_if.c **** /**
  86:Src/usbd_cdc_if.c ****   * @}
  87:Src/usbd_cdc_if.c ****   */
  88:Src/usbd_cdc_if.c **** 
  89:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_Variables USBD_CDC_IF_Private_Variables
ARM GAS  /var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s 			page 3


  90:Src/usbd_cdc_if.c ****   * @brief Private variables.
  91:Src/usbd_cdc_if.c ****   * @{
  92:Src/usbd_cdc_if.c ****   */
  93:Src/usbd_cdc_if.c **** /* Create buffer for reception and transmission           */
  94:Src/usbd_cdc_if.c **** /* It's up to user to redefine and/or remove those define */
  95:Src/usbd_cdc_if.c **** /** Received data over USB are stored in this buffer      */
  96:Src/usbd_cdc_if.c **** uint8_t UserRxBufferFS[APP_RX_DATA_SIZE];
  97:Src/usbd_cdc_if.c **** 
  98:Src/usbd_cdc_if.c **** /** Data to send over USB CDC are stored in this buffer   */
  99:Src/usbd_cdc_if.c **** uint8_t UserTxBufferFS[APP_TX_DATA_SIZE];
 100:Src/usbd_cdc_if.c **** 
 101:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_VARIABLES */
 102:Src/usbd_cdc_if.c **** 
 103:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_VARIABLES */
 104:Src/usbd_cdc_if.c **** 
 105:Src/usbd_cdc_if.c **** /**
 106:Src/usbd_cdc_if.c ****   * @}
 107:Src/usbd_cdc_if.c ****   */
 108:Src/usbd_cdc_if.c **** 
 109:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Exported_Variables USBD_CDC_IF_Exported_Variables
 110:Src/usbd_cdc_if.c ****   * @brief Public variables.
 111:Src/usbd_cdc_if.c ****   * @{
 112:Src/usbd_cdc_if.c ****   */
 113:Src/usbd_cdc_if.c **** 
 114:Src/usbd_cdc_if.c **** extern USBD_HandleTypeDef hUsbDeviceFS;
 115:Src/usbd_cdc_if.c **** 
 116:Src/usbd_cdc_if.c **** /* USER CODE BEGIN EXPORTED_VARIABLES */
 117:Src/usbd_cdc_if.c **** 
 118:Src/usbd_cdc_if.c **** /* USER CODE END EXPORTED_VARIABLES */
 119:Src/usbd_cdc_if.c **** 
 120:Src/usbd_cdc_if.c **** /**
 121:Src/usbd_cdc_if.c ****   * @}
 122:Src/usbd_cdc_if.c ****   */
 123:Src/usbd_cdc_if.c **** 
 124:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_FunctionPrototypes USBD_CDC_IF_Private_FunctionPrototypes
 125:Src/usbd_cdc_if.c ****   * @brief Private functions declaration.
 126:Src/usbd_cdc_if.c ****   * @{
 127:Src/usbd_cdc_if.c ****   */
 128:Src/usbd_cdc_if.c **** 
 129:Src/usbd_cdc_if.c **** static int8_t CDC_Init_FS(void);
 130:Src/usbd_cdc_if.c **** static int8_t CDC_DeInit_FS(void);
 131:Src/usbd_cdc_if.c **** static int8_t CDC_Control_FS(uint8_t cmd, uint8_t* pbuf, uint16_t length);
 132:Src/usbd_cdc_if.c **** static int8_t CDC_Receive_FS(uint8_t* pbuf, uint32_t *Len);
 133:Src/usbd_cdc_if.c **** 
 134:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_FUNCTIONS_DECLARATION */
 135:Src/usbd_cdc_if.c **** 
 136:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_FUNCTIONS_DECLARATION */
 137:Src/usbd_cdc_if.c **** 
 138:Src/usbd_cdc_if.c **** /**
 139:Src/usbd_cdc_if.c ****   * @}
 140:Src/usbd_cdc_if.c ****   */
 141:Src/usbd_cdc_if.c **** 
 142:Src/usbd_cdc_if.c **** USBD_CDC_ItfTypeDef USBD_Interface_fops_FS =
 143:Src/usbd_cdc_if.c **** {
 144:Src/usbd_cdc_if.c ****   CDC_Init_FS,
 145:Src/usbd_cdc_if.c ****   CDC_DeInit_FS,
 146:Src/usbd_cdc_if.c ****   CDC_Control_FS,
ARM GAS  /var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s 			page 4


 147:Src/usbd_cdc_if.c ****   CDC_Receive_FS
 148:Src/usbd_cdc_if.c **** };
 149:Src/usbd_cdc_if.c **** 
 150:Src/usbd_cdc_if.c **** /* Private functions ---------------------------------------------------------*/
 151:Src/usbd_cdc_if.c **** /**
 152:Src/usbd_cdc_if.c ****   * @brief  Initializes the CDC media low layer over the FS USB IP
 153:Src/usbd_cdc_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
 154:Src/usbd_cdc_if.c ****   */
 155:Src/usbd_cdc_if.c **** static int8_t CDC_Init_FS(void)
 156:Src/usbd_cdc_if.c **** {
 157:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 3 */
 158:Src/usbd_cdc_if.c ****   /* Set Application Buffers */
 159:Src/usbd_cdc_if.c ****   USBD_CDC_SetTxBuffer(&hUsbDeviceFS, UserTxBufferFS, 0);
 160:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceFS, UserRxBufferFS);
 161:Src/usbd_cdc_if.c ****   return (USBD_OK);
 162:Src/usbd_cdc_if.c ****   /* USER CODE END 3 */
 163:Src/usbd_cdc_if.c **** }
 164:Src/usbd_cdc_if.c **** 
 165:Src/usbd_cdc_if.c **** /**
 166:Src/usbd_cdc_if.c ****   * @brief  DeInitializes the CDC media low layer
 167:Src/usbd_cdc_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
 168:Src/usbd_cdc_if.c ****   */
 169:Src/usbd_cdc_if.c **** static int8_t CDC_DeInit_FS(void)
 170:Src/usbd_cdc_if.c **** {
  27              		.loc 1 170 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 171:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 4 */
 172:Src/usbd_cdc_if.c ****   return (USBD_OK);
 173:Src/usbd_cdc_if.c ****   /* USER CODE END 4 */
 174:Src/usbd_cdc_if.c **** }
  32              		.loc 1 174 0
  33 0000 0020     		movs	r0, #0
  34 0002 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE134:
  38              		.section	.text.CDC_Control_FS,"ax",%progbits
  39              		.align	1
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv5-sp-d16
  45              	CDC_Control_FS:
  46              	.LFB135:
 175:Src/usbd_cdc_if.c **** 
 176:Src/usbd_cdc_if.c **** /**
 177:Src/usbd_cdc_if.c ****   * @brief  Manage the CDC class requests
 178:Src/usbd_cdc_if.c ****   * @param  cmd: Command code
 179:Src/usbd_cdc_if.c ****   * @param  pbuf: Buffer containing command data (request parameters)
 180:Src/usbd_cdc_if.c ****   * @param  length: Number of data to be sent (in bytes)
 181:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 182:Src/usbd_cdc_if.c ****   */
 183:Src/usbd_cdc_if.c **** static int8_t CDC_Control_FS(uint8_t cmd, uint8_t* pbuf, uint16_t length)
 184:Src/usbd_cdc_if.c **** {
  47              		.loc 1 184 0
ARM GAS  /var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s 			page 5


  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              	.LVL0:
 185:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 5 */
 186:Src/usbd_cdc_if.c ****   switch(cmd)
 187:Src/usbd_cdc_if.c ****   {
 188:Src/usbd_cdc_if.c ****     case CDC_SEND_ENCAPSULATED_COMMAND:
 189:Src/usbd_cdc_if.c **** 
 190:Src/usbd_cdc_if.c ****     break;
 191:Src/usbd_cdc_if.c **** 
 192:Src/usbd_cdc_if.c ****     case CDC_GET_ENCAPSULATED_RESPONSE:
 193:Src/usbd_cdc_if.c **** 
 194:Src/usbd_cdc_if.c ****     break;
 195:Src/usbd_cdc_if.c **** 
 196:Src/usbd_cdc_if.c ****     case CDC_SET_COMM_FEATURE:
 197:Src/usbd_cdc_if.c **** 
 198:Src/usbd_cdc_if.c ****     break;
 199:Src/usbd_cdc_if.c **** 
 200:Src/usbd_cdc_if.c ****     case CDC_GET_COMM_FEATURE:
 201:Src/usbd_cdc_if.c **** 
 202:Src/usbd_cdc_if.c ****     break;
 203:Src/usbd_cdc_if.c **** 
 204:Src/usbd_cdc_if.c ****     case CDC_CLEAR_COMM_FEATURE:
 205:Src/usbd_cdc_if.c **** 
 206:Src/usbd_cdc_if.c ****     break;
 207:Src/usbd_cdc_if.c **** 
 208:Src/usbd_cdc_if.c ****   /*******************************************************************************/
 209:Src/usbd_cdc_if.c ****   /* Line Coding Structure                                                       */
 210:Src/usbd_cdc_if.c ****   /*-----------------------------------------------------------------------------*/
 211:Src/usbd_cdc_if.c ****   /* Offset | Field       | Size | Value  | Description                          */
 212:Src/usbd_cdc_if.c ****   /* 0      | dwDTERate   |   4  | Number |Data terminal rate, in bits per second*/
 213:Src/usbd_cdc_if.c ****   /* 4      | bCharFormat |   1  | Number | Stop bits                            */
 214:Src/usbd_cdc_if.c ****   /*                                        0 - 1 Stop bit                       */
 215:Src/usbd_cdc_if.c ****   /*                                        1 - 1.5 Stop bits                    */
 216:Src/usbd_cdc_if.c ****   /*                                        2 - 2 Stop bits                      */
 217:Src/usbd_cdc_if.c ****   /* 5      | bParityType |  1   | Number | Parity                               */
 218:Src/usbd_cdc_if.c ****   /*                                        0 - None                             */
 219:Src/usbd_cdc_if.c ****   /*                                        1 - Odd                              */
 220:Src/usbd_cdc_if.c ****   /*                                        2 - Even                             */
 221:Src/usbd_cdc_if.c ****   /*                                        3 - Mark                             */
 222:Src/usbd_cdc_if.c ****   /*                                        4 - Space                            */
 223:Src/usbd_cdc_if.c ****   /* 6      | bDataBits  |   1   | Number Data bits (5, 6, 7, 8 or 16).          */
 224:Src/usbd_cdc_if.c ****   /*******************************************************************************/
 225:Src/usbd_cdc_if.c ****     case CDC_SET_LINE_CODING:
 226:Src/usbd_cdc_if.c **** 
 227:Src/usbd_cdc_if.c ****     break;
 228:Src/usbd_cdc_if.c **** 
 229:Src/usbd_cdc_if.c ****     case CDC_GET_LINE_CODING:
 230:Src/usbd_cdc_if.c **** 
 231:Src/usbd_cdc_if.c ****     break;
 232:Src/usbd_cdc_if.c **** 
 233:Src/usbd_cdc_if.c ****     case CDC_SET_CONTROL_LINE_STATE:
 234:Src/usbd_cdc_if.c **** 
 235:Src/usbd_cdc_if.c ****     break;
 236:Src/usbd_cdc_if.c **** 
ARM GAS  /var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s 			page 6


 237:Src/usbd_cdc_if.c ****     case CDC_SEND_BREAK:
 238:Src/usbd_cdc_if.c **** 
 239:Src/usbd_cdc_if.c ****     break;
 240:Src/usbd_cdc_if.c **** 
 241:Src/usbd_cdc_if.c ****   default:
 242:Src/usbd_cdc_if.c ****     break;
 243:Src/usbd_cdc_if.c ****   }
 244:Src/usbd_cdc_if.c **** 
 245:Src/usbd_cdc_if.c ****   return (USBD_OK);
 246:Src/usbd_cdc_if.c ****   /* USER CODE END 5 */
 247:Src/usbd_cdc_if.c **** }
  53              		.loc 1 247 0
  54 0000 0020     		movs	r0, #0
  55              	.LVL1:
  56 0002 7047     		bx	lr
  57              		.cfi_endproc
  58              	.LFE135:
  60              		.section	.text.CDC_Receive_FS,"ax",%progbits
  61              		.align	1
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu fpv5-sp-d16
  67              	CDC_Receive_FS:
  68              	.LFB136:
 248:Src/usbd_cdc_if.c **** 
 249:Src/usbd_cdc_if.c **** /**
 250:Src/usbd_cdc_if.c ****   * @brief  Data received over USB OUT endpoint are sent over CDC interface
 251:Src/usbd_cdc_if.c ****   *         through this function.
 252:Src/usbd_cdc_if.c ****   *
 253:Src/usbd_cdc_if.c ****   *         @note
 254:Src/usbd_cdc_if.c ****   *         This function will block any OUT packet reception on USB endpoint
 255:Src/usbd_cdc_if.c ****   *         untill exiting this function. If you exit this function before transfer
 256:Src/usbd_cdc_if.c ****   *         is complete on CDC interface (ie. using DMA controller) it will result
 257:Src/usbd_cdc_if.c ****   *         in receiving more data while previous ones are still not sent.
 258:Src/usbd_cdc_if.c ****   *
 259:Src/usbd_cdc_if.c ****   * @param  Buf: Buffer of data to be received
 260:Src/usbd_cdc_if.c ****   * @param  Len: Number of data received (in bytes)
 261:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 262:Src/usbd_cdc_if.c ****   */
 263:Src/usbd_cdc_if.c **** static int8_t CDC_Receive_FS(uint8_t* Buf, uint32_t *Len)
 264:Src/usbd_cdc_if.c **** {
  69              		.loc 1 264 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              	.LVL2:
  74 0000 10B5     		push	{r4, lr}
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 4, -8
  77              		.cfi_offset 14, -4
 265:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 6 */
 266:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceFS, &Buf[0]);
  78              		.loc 1 266 0
  79 0002 054C     		ldr	r4, .L5
  80 0004 0146     		mov	r1, r0
  81              	.LVL3:
ARM GAS  /var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s 			page 7


  82 0006 2046     		mov	r0, r4
  83              	.LVL4:
  84 0008 FFF7FEFF 		bl	USBD_CDC_SetRxBuffer
  85              	.LVL5:
 267:Src/usbd_cdc_if.c ****   USBD_CDC_ReceivePacket(&hUsbDeviceFS);
  86              		.loc 1 267 0
  87 000c 2046     		mov	r0, r4
  88 000e FFF7FEFF 		bl	USBD_CDC_ReceivePacket
  89              	.LVL6:
 268:Src/usbd_cdc_if.c ****   return (USBD_OK);
 269:Src/usbd_cdc_if.c ****   /* USER CODE END 6 */
 270:Src/usbd_cdc_if.c **** }
  90              		.loc 1 270 0
  91 0012 0020     		movs	r0, #0
  92 0014 10BD     		pop	{r4, pc}
  93              	.L6:
  94 0016 00BF     		.align	2
  95              	.L5:
  96 0018 00000000 		.word	hUsbDeviceFS
  97              		.cfi_endproc
  98              	.LFE136:
 100              		.section	.text.CDC_Init_FS,"ax",%progbits
 101              		.align	1
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 105              		.fpu fpv5-sp-d16
 107              	CDC_Init_FS:
 108              	.LFB133:
 156:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 3 */
 109              		.loc 1 156 0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113 0000 10B5     		push	{r4, lr}
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 4, -8
 116              		.cfi_offset 14, -4
 159:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceFS, UserRxBufferFS);
 117              		.loc 1 159 0
 118 0002 064C     		ldr	r4, .L9
 119 0004 0022     		movs	r2, #0
 120 0006 0649     		ldr	r1, .L9+4
 121 0008 2046     		mov	r0, r4
 122 000a FFF7FEFF 		bl	USBD_CDC_SetTxBuffer
 123              	.LVL7:
 160:Src/usbd_cdc_if.c ****   return (USBD_OK);
 124              		.loc 1 160 0
 125 000e 0549     		ldr	r1, .L9+8
 126 0010 2046     		mov	r0, r4
 127 0012 FFF7FEFF 		bl	USBD_CDC_SetRxBuffer
 128              	.LVL8:
 163:Src/usbd_cdc_if.c **** 
 129              		.loc 1 163 0
 130 0016 0020     		movs	r0, #0
 131 0018 10BD     		pop	{r4, pc}
 132              	.L10:
ARM GAS  /var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s 			page 8


 133 001a 00BF     		.align	2
 134              	.L9:
 135 001c 00000000 		.word	hUsbDeviceFS
 136 0020 00000000 		.word	UserTxBufferFS
 137 0024 00000000 		.word	UserRxBufferFS
 138              		.cfi_endproc
 139              	.LFE133:
 141              		.section	.text.CDC_Transmit_FS,"ax",%progbits
 142              		.align	1
 143              		.global	CDC_Transmit_FS
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 147              		.fpu fpv5-sp-d16
 149              	CDC_Transmit_FS:
 150              	.LFB137:
 271:Src/usbd_cdc_if.c **** 
 272:Src/usbd_cdc_if.c **** /**
 273:Src/usbd_cdc_if.c ****   * @brief  CDC_Transmit_FS
 274:Src/usbd_cdc_if.c ****   *         Data to send over USB IN endpoint are sent over CDC interface
 275:Src/usbd_cdc_if.c ****   *         through this function.
 276:Src/usbd_cdc_if.c ****   *         @note
 277:Src/usbd_cdc_if.c ****   *
 278:Src/usbd_cdc_if.c ****   *
 279:Src/usbd_cdc_if.c ****   * @param  Buf: Buffer of data to be sent
 280:Src/usbd_cdc_if.c ****   * @param  Len: Number of data to be sent (in bytes)
 281:Src/usbd_cdc_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL or USBD_BUSY
 282:Src/usbd_cdc_if.c ****   */
 283:Src/usbd_cdc_if.c **** uint8_t CDC_Transmit_FS(uint8_t* Buf, uint16_t Len)
 284:Src/usbd_cdc_if.c **** {
 151              		.loc 1 284 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              	.LVL9:
 285:Src/usbd_cdc_if.c ****   uint8_t result = USBD_OK;
 286:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 7 */
 287:Src/usbd_cdc_if.c ****   USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef*)hUsbDeviceFS.pClassData;
 156              		.loc 1 287 0
 157 0000 094B     		ldr	r3, .L19
 158 0002 D3F8B832 		ldr	r3, [r3, #696]
 159              	.LVL10:
 288:Src/usbd_cdc_if.c ****   if (hcdc->TxState != 0){
 160              		.loc 1 288 0
 161 0006 D3F81432 		ldr	r3, [r3, #532]
 162              	.LVL11:
 163 000a 0BB1     		cbz	r3, .L18
 289:Src/usbd_cdc_if.c ****     return USBD_BUSY;
 164              		.loc 1 289 0
 165 000c 0120     		movs	r0, #1
 166              	.LVL12:
 290:Src/usbd_cdc_if.c ****   }
 291:Src/usbd_cdc_if.c ****   USBD_CDC_SetTxBuffer(&hUsbDeviceFS, Buf, Len);
 292:Src/usbd_cdc_if.c ****   result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
 293:Src/usbd_cdc_if.c ****   /* USER CODE END 7 */
 294:Src/usbd_cdc_if.c ****   return result;
 295:Src/usbd_cdc_if.c **** }
ARM GAS  /var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s 			page 9


 167              		.loc 1 295 0
 168 000e 7047     		bx	lr
 169              	.LVL13:
 170              	.L18:
 284:Src/usbd_cdc_if.c ****   uint8_t result = USBD_OK;
 171              		.loc 1 284 0
 172 0010 10B5     		push	{r4, lr}
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 4, -8
 175              		.cfi_offset 14, -4
 176 0012 0A46     		mov	r2, r1
 177 0014 0146     		mov	r1, r0
 178              	.LVL14:
 291:Src/usbd_cdc_if.c ****   result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
 179              		.loc 1 291 0
 180 0016 044C     		ldr	r4, .L19
 181              	.LVL15:
 182 0018 2046     		mov	r0, r4
 183              	.LVL16:
 184 001a FFF7FEFF 		bl	USBD_CDC_SetTxBuffer
 185              	.LVL17:
 292:Src/usbd_cdc_if.c ****   /* USER CODE END 7 */
 186              		.loc 1 292 0
 187 001e 2046     		mov	r0, r4
 188 0020 FFF7FEFF 		bl	USBD_CDC_TransmitPacket
 189              	.LVL18:
 190              		.loc 1 295 0
 191 0024 10BD     		pop	{r4, pc}
 192              	.L20:
 193 0026 00BF     		.align	2
 194              	.L19:
 195 0028 00000000 		.word	hUsbDeviceFS
 196              		.cfi_endproc
 197              	.LFE137:
 199              		.global	USBD_Interface_fops_FS
 200              		.comm	UserTxBufferFS,1000,4
 201              		.comm	UserRxBufferFS,1000,4
 202              		.section	.data.USBD_Interface_fops_FS,"aw",%progbits
 203              		.align	2
 206              	USBD_Interface_fops_FS:
 207 0000 00000000 		.word	CDC_Init_FS
 208 0004 00000000 		.word	CDC_DeInit_FS
 209 0008 00000000 		.word	CDC_Control_FS
 210 000c 00000000 		.word	CDC_Receive_FS
 211              		.text
 212              	.Letext0:
 213              		.file 2 "/Users/grantham/packages/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine
 214              		.file 3 "/Users/grantham/packages/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/loc
 215              		.file 4 "/Users/grantham/packages/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_ty
 216              		.file 5 "/Users/grantham/packages/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/i
 217              		.file 6 "/Users/grantham/packages/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/ree
 218              		.file 7 "/Users/grantham/packages/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_st
 219              		.file 8 "/Users/grantham/packages/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdlib.
 220              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 221              		.file 10 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 222              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 223              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
ARM GAS  /var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s 			page 10


 224              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 225              		.file 14 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 226              		.file 15 "Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h"
 227              		.file 16 "Inc/usbd_cdc_if.h"
ARM GAS  /var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_cdc_if.c
/var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s:18     .text.CDC_DeInit_FS:0000000000000000 $t
/var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s:24     .text.CDC_DeInit_FS:0000000000000000 CDC_DeInit_FS
/var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s:39     .text.CDC_Control_FS:0000000000000000 $t
/var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s:45     .text.CDC_Control_FS:0000000000000000 CDC_Control_FS
/var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s:61     .text.CDC_Receive_FS:0000000000000000 $t
/var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s:67     .text.CDC_Receive_FS:0000000000000000 CDC_Receive_FS
/var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s:96     .text.CDC_Receive_FS:0000000000000018 $d
/var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s:101    .text.CDC_Init_FS:0000000000000000 $t
/var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s:107    .text.CDC_Init_FS:0000000000000000 CDC_Init_FS
/var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s:135    .text.CDC_Init_FS:000000000000001c $d
                            *COM*:00000000000003e8 UserTxBufferFS
                            *COM*:00000000000003e8 UserRxBufferFS
/var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s:142    .text.CDC_Transmit_FS:0000000000000000 $t
/var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s:149    .text.CDC_Transmit_FS:0000000000000000 CDC_Transmit_FS
/var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s:195    .text.CDC_Transmit_FS:0000000000000028 $d
/var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s:206    .data.USBD_Interface_fops_FS:0000000000000000 USBD_Interface_fops_FS
/var/folders/17/j_dgbcc52q10y0jc3c_zbwd80000gn/T//ccLuaZll.s:203    .data.USBD_Interface_fops_FS:0000000000000000 $d

UNDEFINED SYMBOLS
USBD_CDC_SetRxBuffer
USBD_CDC_ReceivePacket
hUsbDeviceFS
USBD_CDC_SetTxBuffer
USBD_CDC_TransmitPacket
